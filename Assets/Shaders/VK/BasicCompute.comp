/******************************************************************************
This file is part of the Newcastle Vulkan Tutorial Series

Author:Rich Davison
Contact:richgdavison@gmail.com
License: MIT (see LICENSE file at the top of the source tree)
*//////////////////////////////////////////////////////////////////////////////


#version 460
#extension GL_ARB_separate_shader_objects  : enable
#extension GL_ARB_shading_language_420pack : enable
#extension GL_ARB_compute_shader : enable

layout(local_size_x = 32, local_size_y = 1) in;  

layout (set = 0, binding  = 0) buffer testData 
{
	vec4 allData[];
};

layout(push_constant) uniform PushTime {
	float time;
};

void main() {
	allData[gl_GlobalInvocationID .x].x = sin(time - gl_GlobalInvocationID .x) * (gl_GlobalInvocationID .x / float(gl_NumWorkGroups.x * gl_NumWorkGroups.y * 10.0f)); 
	allData[gl_GlobalInvocationID .x].y = cos(time - gl_GlobalInvocationID .x) * (gl_GlobalInvocationID .x / float(gl_NumWorkGroups.x * gl_NumWorkGroups.y * 10.0f));
	allData[gl_GlobalInvocationID .x].z = 0.0f;
}
